NoDataSuccess:
  description: 非同期処理開始のデータ
  type: object
  required: [success, data, code, message, errorAttributes]
  properties:
    success: { type: boolean, example: false }
    process: { type: boolean, example: true }
    is_valid: { type: boolean, example: true }
    data: { type: array, nullable: true, example: [] }
    actions_queue: { type: array, example: [] }
    pending_action_code: { type: string, nullable: true, example: null }
    actions_stack: { type: array, nullable: true, example: null }
    code: { type: integer, example: 800 }
    caption: { type: string, example: "Async Job Processing" }
    error_attributes: { type: array, maximum: 0, example: [] }
    job_id: { type: string, example: "job_565645683389" }
    job_uri: { type: string, example: "/v1/async/jobs/job_565645683389" }

      # {
      #     "success": boolean, // 非同期処理すべてが完了したかどうか
      #     "process": boolean, // 非同期処理が実行中かどうか
      #     "is_valid": boolean, // JobIDが有効かどうか(期限切れでないかどうか)
      #     "data": object | array | null, // 処理全体として返却されるデータ
      #     "actions_queue": array, // 非同期処理の未処理アクションコードが配列に格納される(この段階で実行すべきアクションが順番に格納されており, アクション開始と同時にそのアクションが削除される)
      #     "pending_action_code": string | null, // 非同期処理の実行中アクションコードが格納される(この段階ではnull)
      #     "actions_stack": array, // 非同期処理の実行済みアクションが格納される(この段階ではnull)
      #     "code": string, // 非同期処理実行中を示すステータスコード | 非同期処理完了を示すステータスコード | 非同期処理エラーを示すステータスコード
      #     "caption": string, // 非同期処理実行中を示すキャプション | 非同期処理完了を示すキャプション | 非同期処理エラーを示すキャプション
      #     "error_attributes": array | null,
      #     "job_id": string,
      #     "job_uri": string,
      #     "progress": number, // 進行状況を示す数値(0-100), 計算方法としては, 処理されるべきアクション数に対して, 実行されたアクション数(data.length)を割合で示す(この段階では0),
      #     "started_at": string | null, // 非同期処理の開始日時
      #     "expired_at": string | null // 非同期処理の有効期限を示す日時(通常は24時間後)
      # }